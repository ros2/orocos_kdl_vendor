index 64fdd21..5727483 100644
--- a/python_orocos_kdl/CMakeLists.txt
+++ b/python_orocos_kdl/CMakeLists.txt
@@ -1,4 +1,4 @@
-cmake_minimum_required(VERSION 3.12.0)
+cmake_minimum_required(VERSION 3.20)
 if(POLICY CMP0048)
   cmake_policy(SET CMP0048 NEW)
 endif()
@@ -10,6 +10,19 @@ if(POLICY CMP0057)
   cmake_policy(SET CMP0057 NEW)  # support IN_LISTS which is required for PyBind11 2.6 and newer
 endif()
 
+# CMake policy CMP0094 controls how Python versions are found;
+# the OLD policy was to find the newest one, while the new policy
+# is to stop after finding the first one.  We want to find the first
+# one, so be sure to set that policy here.
+if(POLICY CMP0094)
+  cmake_policy(SET CMP0094 NEW)
+endif()
+# The default for Python3_FIND_UNVERSIONED_NAMES is LAST, which
+# means find_package(Python3) will prefer to find /usr/bin/python3.11
+# over /usr/bin/python3.  We actually prefer to find the system version,
+# so set this to FIRST.
+set(Python3_FIND_UNVERSIONED_NAMES FIRST)
+
 project(python_orocos_kdl VERSION 1.5.1)
 
 # find a matching version of orocos_kdl
@@ -17,15 +30,9 @@ find_package(orocos_kdl ${PROJECT_VERSION} EXACT REQUIRED)
 include_directories(${orocos_kdl_INCLUDE_DIRS})
 link_directories(${orocos_kdl_LIBRARY_DIRS})
 
-if(DEFINED ENV{ROS_PYTHON_VERSION})
-  SET(PYTHON_VERSION $ENV{ROS_PYTHON_VERSION} CACHE STRING "Python Version")
-else()
-  SET(PYTHON_VERSION 3 CACHE STRING "Python Version")
-endif()
-
-set(PYBIND11_PYTHON_VERSION ${PYTHON_VERSION} CACHE STRING "Python version used by PyBind11")
+set(PYBIND11_PYTHON_VERSION 3 CACHE STRING "Python version used by PyBind11")
 
-find_package(Python ${PYTHON_VERSION} COMPONENTS Interpreter Development REQUIRED)
+find_package(Python3 COMPONENTS Interpreter Development REQUIRED)
 # get_python_lib in python3 produces path which isn't in sys.path: https://bugs.launchpad.net/ubuntu/+source/python3-stdlib-extensions/+bug/1832215
 # execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(plat_specific=True, prefix=''))" OUTPUT_VARIABLE PYTHON_SITE_PACKAGES OUTPUT_STRIP_TRAILING_WHITESPACE)
 set(PYTHON_SITE_PACKAGES_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/lib/python${Python_VERSION_MAJOR}.${Python_VERSION_MINOR}/dist-packages")  # This might be overridden below if built with catkin.
@@ -43,12 +50,6 @@ if(catkin_FOUND)
 endif()
 
 # Build the module
-if(WIN32)
-  set(PYTHON_MODULE_EXTENSION ".pyd")
-else()
-  set(PYTHON_MODULE_EXTENSION ".so")
-endif()
-
 find_package(pybind11 2.6 QUIET)
 if(NOT ${pybind11_FOUND})
   message(STATUS "pybind11 not found, building from source")
